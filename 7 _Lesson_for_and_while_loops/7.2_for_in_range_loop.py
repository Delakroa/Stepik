# Функция range() с одним параметром

# Рассмотрим программный код:

for i in range(10):
    print('Привет', i)

# Значение, которое мы указываем в скобках у функции range() обозначает количество итераций цикла, при этом
# переменная i принимает последовательно значения: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.
#
# Если быть более точным, то мы говорим, что функция range(n) генерирует последовательность чисел от 0 до n-1,
# а цикл for последовательно перебирает эту последовательность.

# Перегрузка range() с двумя параметрами

# Если мы хотим начинать последовательность не с 0, а с какого-то другого числа, то мы можем использовать перегрузку
# функции range() принимающую два параметра. Например, вызов функции range(1, 5) сгенерирует последовательность чисел
# 1, 2, 3, 4  (будьте внимательны, правая граница не включительна). Если нам нужны числа от 1 до 5 включительно,
# то мы используем range(1, 6).

# Таким образом:
#
# range(n): создает последовательность чисел 0, 1, 2, 3, ..., n - 1;
#
# range(n, m): создает последовательность чисел n, n + 1, n + 2, ..., m - 2, m - 1.
#
# Напишем программу, которая выводит те числа из промежутка [100;999], которые оканчиваются на 7.
#
# Используя функцию range() с двумя параметрами, получаем:

for i in range(100, 1000):  # перебираем числа от 100 до 999
    if i % 10 == 7:         # используем остаток от деления на 10, для получения последней цифры
        print(i)


# Обратите внимание, в качестве второго параметра мы передали число 1000.
#
# Если первый параметр больше второго, то функция range() генерирует пустую последовательность. Например,
# вызов функции range(10, 1) приводит к генерации пустой последовательности.

