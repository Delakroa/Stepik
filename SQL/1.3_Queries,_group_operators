
--Выбор уникальных элементов столбца

--Чтобы отобрать уникальные элементы некоторого столбца используется ключевое слово DISTINCT, которое размещается сразу
-- после SELECT.

--Пример

--Выбрать различных авторов, книги которых хранятся в таблице book.

--Запрос:

SELECT DISTINCT author
FROM book;
Результат:

--+------------------+
--| author           |
--+------------------+
--| Булгаков М.А.    |
--| Достоевский Ф.М. |
--| Есенин С.А.      |
--+------------------+

--Другой способ – использование оператора GROUP BY, который группирует данные при выборке, имеющие одинаковые значения
-- в некотором столбце. Столбец, по которому осуществляется группировка, указывается после GROUP BY .

--С помощью GROUP BY можно выбрать уникальные элементы столбца, по которому осуществляется группировка. Результат будет
-- точно такой же как при использовании DISTINCT.

--Запрос:

SELECT  author
FROM book
GROUP BY author;

--Задание
--Отобрать различные (уникальные) элементы столбца amount таблицы book.

SELECT amount
FROM book
GROUP BY amount;

-----------------------------------------------------------------------------------------------------------------------

--Выборка данных, групповые функции SUM и COUNT

--При группировке над элементами столбца, входящими в группу можно выполнить различные действия, например,
--просуммировать
-- их или найти количество элементов в группе.

--Подробно рассмотрим, как осуществляется группировка данных по некоторому столбцу и вычисления над группой на следующем
-- примере:

SELECT author, sum(amount), count(amount)
FROM book
GROUP BY author;

-- 1. В таблице book определяются строки, в которых в столбце author одинаковые значения:

--Получили 3 различные группы:

--группа I объединяет две записи, у которых в столбце author значение Булгаков М.А.;
--группа II объединяет три записи, у которых в столбце author значение Достоевский Ф.М.;
--группа III объединяет одну запись, у которой в столбце author значение Есенин С.А.

--2. Вместо каждой группы в результирующий запрос включается  одна запись. Запись как минимум включает значение столбца,
-- по которому осуществляется группировка (в нашем случае это author):

--3. Дальше можно выполнить вычисления над элементами КАЖДОЙ группы в отдельности, например, посчитать общее количество
-- экземпляров книг каждого автора. Для этого используется групповая функция SUM(), а в скобках указывается столбец,
--  по которому нужно выполнить суммирование ( в нашем случае amount):

--4. Также можно посчитать, сколько записей относится к группе. Для этого используется функция COUNT(), в скобках можно
-- указать ЛЮБОЙ столбец из группы, если группа не содержит пустых значений (ниже приведен пример, в котором показано,
--  как работает COUNT(), если в группе есть пустые значения):

--Пример

--Посчитать, сколько экземпляров книг каждого автора хранится на складе.

--Запрос:

SELECT author, SUM(amount)
FROM book
GROUP BY author;

--Результат:

--+------------------+-------------+
--| author           | SUM(amount) |
--+------------------+-------------+
--| Булгаков М.А.    | 8           |
--| Достоевский Ф.М. | 23          |
--| Есенин С.А.      | 15          |
--+------------------+-------------+

--Примечание
--Обратите внимание, что в качестве названия вычисляемого столбца в результирующей таблице используется выражение.
-- Рекомендуется всем  вычисляемым столбцам давать имя.

--Пример

--Посчитать, сколько различных книг каждого автора хранится на складе.

--Только для этого примера в таблицу book добавлена запись с пустыми значениями в столбцах amount и price:

--+---------+-----------------------+------------------+--------+--------+
--| book_id | title                 | author           | price  | amount |
--+---------+-----------------------+------------------+--------+--------+
--| 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
--| 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
--| 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
--| 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 3      |
--| 5       | Игрок                 | Достоевский Ф.М. | 480.50 | 10     |
--| 6       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
--| 7       | Черный человек        | Есенин С.А.      | Null   | Null   |
--+---------+-----------------------+------------------+--------+--------+

--Запрос:

--/* чтобы проверить запрос, добавьте в таблицу строку */
INSERT INTO book (title, author, price, amount) VALUES ('Черный человек','Есенин С.А.', Null, Null);

SELECT author, COUNT(author), COUNT(amount), COUNT(*)
FROM book
GROUP BY author;

--Результат:

--+------------------+---------------+---------------+----------+
--| author           | COUNT(author) | COUNT(amount) | COUNT(*) |
--+------------------+---------------+---------------+----------+
--| Булгаков М.А.    | 2             | 2             | 2        |
--| Достоевский Ф.М. | 3             | 3             | 3        |
--| Есенин С.А.      | 2             | 1             | 2        |
--+------------------+---------------+---------------+----------+

--Из таблицы с результатами запроса видно, что функцию COUNT() можно применять к любому столбцу, в том числе можно использовать и *, если таблица не содержит пустых значений. Если же в столбцах есть значения Null, (для группы по автору Есенин в нашем примере), то

--COUNT(*) —  подсчитывает  все записи, относящиеся к группе, в том числе и со значением NULL;
--COUNT(имя_столбца) — возвращает количество записей конкретного столбца (только NOT NULL), относящихся к группе.
--ВАЖНО.

--1. Если столбец указан в SELECT  БЕЗ применения групповой функции, то он обязательно должен быть указан и вGROUP BY.
--Иначе получим ошибку.
--2. Между названием функции и скобкой НЕЛЬЗЯ СТАВИТЬ ПРОБЕЛ. Это особенность платформы.

--Задание
--Посчитать, количество различных книг и количество экземпляров книг каждого автора , хранящихся на складе.
--  Столбцы назвать Автор, Различных_книг и Количество_экземпляров соответственно.

--Результат
--+------------------+----------------+------------------------+
--| Автор            | Различных_книг | Количество_экземпляров |
--+------------------+----------------+------------------------+
--| Булгаков М.А.    | 2              | 8                      |
--| Достоевский Ф.М. | 3              | 23                     |
--| Есенин С.А.      | 1              | 15                     |
--+------------------+----------------+------------------------+

--Пояснение

--Название столбцов может состоять из нескольких слов, тогда их нужно заключать в кавычки. Но если слова написать через
-- подчеркивание, тогда получится , что название состоит из одного слова, и кавычки можно не ставить.

SELECT author AS "Автор", COUNT(title) AS "Различных_книг", SUM(amount) AS "Количество_экземпляров"
FROM book
GROUP BY author;

---------------------------------------------------------------------------------------------------------------------

--Выборка данных, групповые функции MIN, MAX и AVG

--К групповым функциям SQL относятся: MIN(), MAX() и AVG(), которые вычисляют минимальное,
-- максимальное и среднее значение элементов столбца, относящихся к группе.

--Пример

--Вывести минимальную цену книги каждого автора

--Запрос:

SELECT author, MIN(price) AS min_price
FROM book
GROUP BY author;

--Результат:

--+------------------+-----------+
--| author           | min_price |
--+------------------+-----------+
--| Булгаков М.А.    | 540.50    |
--| Достоевский Ф.М. | 460.00    |
--| Есенин С.А.      | 650.00    |
--+------------------+-----------+

--Задание
--Вывести фамилию и инициалы автора, минимальную, максимальную и среднюю цену книг каждого автора .
-- Вычисляемые столбцы назвать Минимальная_цена, Максимальная_цена и Средняя_цена соответственно.

SELECT author, MIN(price) AS "Минимальная_цена", MAX(price) AS "Максимальная_цена", AVG(price) AS "Средняя_цена"
FROM book
GROUP BY author;

---------------------------------------------------------------------------------------------------------------------

--Выборка данных c вычислением, групповые функции

--В качестве аргумента групповых функций  SQL может использоваться не только столбец, но и любое допустимое
-- в SQL арифметическое выражение.

--Пример

--Вывести суммарную стоимость книг каждого автора.

--Запрос:

SELECT author, SUM(price * amount) AS Стоимость
FROM book
GROUP BY author;

--Результат:

--+------------------+-----------+
--| author           | Стоимость |
--+------------------+-----------+
--| Булгаков М.А.    | 4715.47   |
--| Достоевский Ф.М. | 11802.03  |
--| Есенин С.А.      | 9750.00   |
--+------------------+-----------+

--Групповые функции могут быть элементами выражений. Например, при вычислении средней стоимости книг каждого
-- автора на предыдущем шаге получились значения с шестью знаками после запятой. А поскольку это деньги, значения
--  нужно округлить до 2 знаков после запятой.

-- Пример

--Найти среднюю цену книг каждого автора.

--Запрос:

SELECT author, ROUND(AVG(price),2) AS Средняя_цена
FROM book
GROUP BY author;

--Результат:

--+------------------+--------------+
--| author           | Средняя_цена |
--+------------------+--------------+
--| Булгаков М.А.    | 605.75       |
--| Достоевский Ф.М. | 579.84       |
--| Есенин С.А.      | 650.00       |
--+------------------+--------------+

--Задание

--Для каждого автора вычислить суммарную стоимость книг S (имя столбца Стоимость), а также вычислить налог на
-- добавленную стоимость  для полученных сумм (имя столбца НДС ) , который включен в стоимость и составляет k = 18%,
--   а также стоимость книг  (Стоимость_без_НДС) без него. Значения округлить до двух знаков после запятой.
--    В запросе для расчета НДС(tax)  и Стоимости без НДС(S_without_tax) использовать следующие формулы:

--------------------------------------------------------------------------------------------------------------------

--Вычисления по таблице целиком

--Групповые функции позволяют вычислять итоговые значения по всей таблице. Например, можно посчитать общее количество
-- книг на складе, вычислить суммарную стоимость и пр. Для этого после ключевого слова SELECT указывается групповая
--  функция для выражения или имени столбца, а ключевые слова GROUP BY опускаются.

--Пример

--Посчитать количество экземпляров книг на складе.

--Запрос:

SELECT SUM(amount) AS Количество
FROM book;
Результат:

--+------------+
--| Количество |
--+------------+
--| 46         |
--+------------+

--Результатом таких запросов является единственная строка с вычисленными по таблице значениями.

-- Пример

--Посчитать общее количество экземпляров книг на складе и их стоимость .

--Запрос:

SELECT SUM(amount) AS Количество,
    SUM(price * amount) AS Стоимость
FROM book;

--Результат:

--+------------+-----------+
--| Количество | Стоимость |
--+------------+-----------+
--| 46         | 26267.50  |
--+------------+-----------+

--Задание

--Вывести  цену самой дешевой книги, цену самой дорогой и среднюю цену уникальных книг на складе. Названия столбцов
-- Минимальная_цена, Максимальная_цена, Средняя_цена соответственно. Среднюю цену округлить до двух знаков после запятой.

--Пояснение. В задании нужно посчитать среднюю цену уникальных книг на складе, а не среднюю цену всех экземпляров книг.

--Результат

--+------------------+-------------------+--------------+
--| Минимальная_цена | Максимальная_цена | Средняя_цена |
--+------------------+-------------------+--------------+
--| 460.00           | 799.01            | 600.17       |
--+------------------+-------------------+--------------+

----------------------------------------------------------------------------------------------------------------------

--Выборка данных по условию, групповые функции

--В запросы с групповыми функциями можно включать условие отбора строк, которое в обычных запросах записывается после WHERE. В запросах с групповыми функциями вместо WHERE используется ключевое слово HAVING , которое размещается после оператора GROUP BY.

--Пример

--Найти минимальную и максимальную цену книг всех авторов, общая стоимость книг которых больше 5000.

--Запрос:

SELECT author,
    MIN(price) AS Минимальная_цена,
    MAX(price) AS Максимальная_цена
FROM book
GROUP BY author
HAVING SUM(price * amount) > 5000;

--Результат:

--+------------------+------------------+-------------------+
--| author           | Минимальная_цена | Максимальная_цена |
--+------------------+------------------+-------------------+
--| Достоевский Ф.М. | 460.00           | 799.01            |
--| Есенин С.А.      | 650.00           | 650.00            |
--+------------------+------------------+-------------------+

--Также в запросах с группировкой можно сортировать данные.

--Пример

--Найти минимальную и максимальную цену книг всех авторов, общая стоимость книг которых больше 5000. Результат
-- вывести по убыванию минимальной цены.

--Запрос:

SELECT author,
    MIN(price) AS Минимальная_цена,
    MAX(price) AS Максимальная_цена
FROM book
GROUP BY author
HAVING SUM(price * amount) > 5000
ORDER BY Минимальная_цена DESC;

--Результат:

--+------------------+------------------+-------------------+
--| author           | Минимальная_цена | Максимальная_цена |
--+------------------+------------------+-------------------+
--| Есенин С.А.      | 650.00           | 650.00            |
--| Достоевский Ф.М. | 460.00           | 799.01            |
--+------------------+------------------+-------------------+

--Пояснение
--При указании столбца, по которому выполняется сортировка, если столбцу присвоено имя  с помощью AS, можно использовать
-- это имя.

--Задание
--Вычислить среднюю цену и суммарную стоимость тех книг, количество экземпляров которых принадлежит интервалу от 5 до 14,
-- включительно. Столбцы назвать Средняя_цена и Стоимость, значения округлить до 2-х знаков после запятой.

--+--------------+-----------+
--| Средняя_цена | Стоимость |
--+--------------+-----------+
--| 493.67       | 12107.50  |
--+--------------+-----------+

SELECT ROUND(AVG(price), 2) AS Средняя_цена, ROUND(SUM(price * amount), 2) AS Стоимость
FROM book
WHERE amount BETWEEN 5 and 14;

----------------------------------------------------------------------------------------------------------------------

